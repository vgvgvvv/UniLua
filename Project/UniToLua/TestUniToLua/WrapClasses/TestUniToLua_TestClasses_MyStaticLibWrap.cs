//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace UniToLua
{
    
    
    public class TestUniToLua_TestClasses_MyStaticLibWrap
    {
        
        public static void Register(UniLua.ILuaState L)
        {
			L.BeginStaticLib("MyStaticLib");
			L.RegVar("field", get_field, set_field);
			L.RegVar("property", get_property, set_property);
			L.RegFunction("Function", Function);
			L.EndStaticLib();
        }
        
        private static int get_field(UniLua.ILuaState L)
        {
			L.PushValue<System.Int32>(TestUniToLua.TestClasses.MyStaticLib.field);
			return 1;
        }
        
        private static int set_field(UniLua.ILuaState L)
        {
			var value = L.CheckValue<System.Int32>(1);
			TestUniToLua.TestClasses.MyStaticLib.field = value;
			return 0;
        }
        
        private static int get_property(UniLua.ILuaState L)
        {
			L.PushValue<System.Int32>(TestUniToLua.TestClasses.MyStaticLib.property);
			return 1;
        }
        
        private static int set_property(UniLua.ILuaState L)
        {
			var value = L.CheckValue<System.Int32>(1);
			TestUniToLua.TestClasses.MyStaticLib.property = value;
			return 0;
        }
        
        private static int Function(UniLua.ILuaState L)
        {
			var arg1 = L.CheckValue<System.Int32>(1);
			var arg2 = L.CheckValue<System.Int32>(2);
			var result = TestUniToLua.TestClasses.MyStaticLib.Function(arg1, arg2);
			L.PushValue<System.Int32>(result);
			return 1;
        }
    }
}
